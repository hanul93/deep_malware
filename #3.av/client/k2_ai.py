# -*- coding:utf-8 -*-
# Author: Kei Choi(hanul93@gmail.com)

import sys
import os
import glob
import requests
import base64
import shutil
import deep_pe

FP_PATH = 'Quarantine'
SERVER = 'http://192.168.0.123:5000'

file_count = 0
malware_count = 0

# -------------------------------------------------------------------------
# 악성코드 결과를 한줄에 출력하기 위한 함수
# -------------------------------------------------------------------------
def convert_display_filename(real_filename):
    # 출력용 이름
    fsencoding = sys.getfilesystemencoding() or sys.getdefaultencoding()
    display_filename = unicode(real_filename, fsencoding).encode(sys.stdout.encoding, 'replace')
    return display_filename

def display_line(filename, message):
    filename += ' '
    filename = convert_display_filename(filename)
    len_fname = len(filename)
    len_msg = len(message)

    if len_fname + 1 + len_msg < 79:
        fname = '%s' % filename
    else:
        able_size = 79 - len_msg
        able_size -= 5  # ...
        min_size = able_size / 2
        if able_size % 2 == 0:
            fname1 = filename[:min_size-1]
        else:
            fname1 = filename[:min_size]
        fname2 = filename[len_fname - min_size:]

        fname = '%s ... %s' % (fname1, fname2)

    print '%s%s' % (fname, message)
    

def ai_scan(buf):
    data = base64.b64encode(buf)

    params = {'context': data}
    response = requests.post(SERVER + '/k2ai/api/v1/file/scan', data=params)

    if response.status_code == 200:
        json_response = response.json()
        # print json_response
        if json_response['result_code'] == 0:
            return json_response['Malware ID'], json_response['Malware Score']
        else:
            return 0, -2

        
def scan_dir(path):
    global file_count
    global malware_count
    
    fl = [path]
    
    while len(fl):
        fname = fl.pop(0)
        if os.path.isdir(fname):
            fl += glob.glob(fname + os.sep + '*')
        elif os.path.isfile(fname):
            data = deep_pe.pe_feature(fname)
            if data:
                m_id, m_score = ai_scan(data)
                file_count += 1
                
                if m_id == 0:
                    msg = '(00) : ok     '
                else:
                    msg = '(%02d) : Malware' % (m_score)
                    malware_count += 1
                    shutil.copy(fname, FP_PATH)

                display_line(fname, msg)


if __name__ == '__main__':
    if len(sys.argv) != 2:
        print 'Usage: %s [path | file]' % os.path.split(sys.argv[0])[-1]
        print sys.exit()
        
    if not os.path.exists(FP_PATH):
        os.mkdir(FP_PATH)
        
    print '-' * 50
    
    fname = sys.argv[1]
    scan_dir(fname)
    
    print '-' * 50
    print 'File    : %d' % file_count
    print 'Malware : %d' % malware_count
